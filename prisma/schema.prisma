generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String
  phone       String?
  password    String
  role        Role         @default(ALUNO)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  classrooms  Classroom[]  @relation("ClassroomInstructor")
  courses     Course[]     @relation("CourseInstructor")
  enrollments Enrollment[]
  videos      Video[]      @relation("VideoAuthor")
}

model Course {
  id           String       @id @default(uuid())
  title        String
  description  String
  instructorId String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  classrooms   Classroom[]
  instructor   User         @relation("CourseInstructor", fields: [instructorId], references: [id])
  enrollments  Enrollment[]
  videos       Video[]
}

model Enrollment {
  id          String     @id @default(uuid())
  studentId   String
  courseId    String
  createdAt   DateTime   @default(now())
  classroomId String?
  Classroom   Classroom? @relation(fields: [classroomId], references: [id])
  course      Course     @relation(fields: [courseId], references: [id])
  student     User       @relation(fields: [studentId], references: [id])
}

model Classroom {
  id           String       @id @default(uuid())
  name         String
  courseId     String
  instructorId String
  course       Course       @relation(fields: [courseId], references: [id])
  instructor   User         @relation("ClassroomInstructor", fields: [instructorId], references: [id])
  students     Enrollment[]
}

model Video {
  id          String    @id @default(uuid())
  title       String
  slug        String    @unique
  thumbnail   String
  url         String
  isPublished Boolean   @default(false)
  publishedAt DateTime? @default(now())
  createdAt   DateTime  @default(now())
  courseId    String
  authorId    String
  author      User      @relation("VideoAuthor", fields: [authorId], references: [id])
  course      Course    @relation(fields: [courseId], references: [id])
}

enum Role {
  ALUNO
  PROFESSOR
  ADMIN
}
